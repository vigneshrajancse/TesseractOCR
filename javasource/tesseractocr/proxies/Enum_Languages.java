// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tesseractocr.proxies;

public enum Enum_Languages
{
	afr(new java.lang.String[][] { new java.lang.String[] { "en_US", "Afrikaans" } }),
	amh(new java.lang.String[][] { new java.lang.String[] { "en_US", "Amharic" } }),
	ara(new java.lang.String[][] { new java.lang.String[] { "en_US", "Arabic" } }),
	asm(new java.lang.String[][] { new java.lang.String[] { "en_US", "Assamese" } }),
	aze(new java.lang.String[][] { new java.lang.String[] { "en_US", "Azerbaijani" } }),
	aze_cyrl(new java.lang.String[][] { new java.lang.String[] { "en_US", "Azerbaijani - Cyrillic" } }),
	bel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Belarusian" } }),
	ben(new java.lang.String[][] { new java.lang.String[] { "en_US", "Bengali" } }),
	bod(new java.lang.String[][] { new java.lang.String[] { "en_US", "Tibetan" } }),
	bos(new java.lang.String[][] { new java.lang.String[] { "en_US", "Bosnian" } }),
	bul(new java.lang.String[][] { new java.lang.String[] { "en_US", "Bulgarian" } }),
	cat(new java.lang.String[][] { new java.lang.String[] { "en_US", "Catalan; Valencian" } }),
	ceb(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cebuano" } }),
	ces(new java.lang.String[][] { new java.lang.String[] { "en_US", "Czech" } }),
	chi_sim(new java.lang.String[][] { new java.lang.String[] { "en_US", "Chinese - Simplified" } }),
	chi_tra(new java.lang.String[][] { new java.lang.String[] { "en_US", "Chinese - Traditional" } }),
	chr(new java.lang.String[][] { new java.lang.String[] { "en_US", "Cherokee" } }),
	cym(new java.lang.String[][] { new java.lang.String[] { "en_US", "Welsh" } }),
	dan(new java.lang.String[][] { new java.lang.String[] { "en_US", "Danish" } }),
	deu(new java.lang.String[][] { new java.lang.String[] { "en_US", "German" } }),
	dzo(new java.lang.String[][] { new java.lang.String[] { "en_US", "Dzongkha" } }),
	ell(new java.lang.String[][] { new java.lang.String[] { "en_US", "Greek, Modern (1453-)" } }),
	eng(new java.lang.String[][] { new java.lang.String[] { "en_US", "English" } }),
	enm(new java.lang.String[][] { new java.lang.String[] { "en_US", "English, Middle (1100-1500)" } }),
	epo(new java.lang.String[][] { new java.lang.String[] { "en_US", "Esperanto" } }),
	est(new java.lang.String[][] { new java.lang.String[] { "en_US", "Estonian" } }),
	eus(new java.lang.String[][] { new java.lang.String[] { "en_US", "Basque" } }),
	fas(new java.lang.String[][] { new java.lang.String[] { "en_US", "Persian" } }),
	fin(new java.lang.String[][] { new java.lang.String[] { "en_US", "Finnish" } }),
	fra(new java.lang.String[][] { new java.lang.String[] { "en_US", "French" } }),
	frk(new java.lang.String[][] { new java.lang.String[] { "en_US", "German Fraktur" } }),
	frm(new java.lang.String[][] { new java.lang.String[] { "en_US", "French, Middle (ca. 1400-1600)" } }),
	gle(new java.lang.String[][] { new java.lang.String[] { "en_US", "Irish" } }),
	glg(new java.lang.String[][] { new java.lang.String[] { "en_US", "Galician" } }),
	grc(new java.lang.String[][] { new java.lang.String[] { "en_US", "Greek, Ancient (-1453)" } }),
	guj(new java.lang.String[][] { new java.lang.String[] { "en_US", "Gujarati" } }),
	hat(new java.lang.String[][] { new java.lang.String[] { "en_US", "Haitian; Haitian Creole" } }),
	heb(new java.lang.String[][] { new java.lang.String[] { "en_US", "Hebrew" } }),
	hin(new java.lang.String[][] { new java.lang.String[] { "en_US", "Hindi" } }),
	hrv(new java.lang.String[][] { new java.lang.String[] { "en_US", "Croatian" } }),
	hun(new java.lang.String[][] { new java.lang.String[] { "en_US", "Hungarian" } }),
	iku(new java.lang.String[][] { new java.lang.String[] { "en_US", "Inuktitut" } }),
	ind(new java.lang.String[][] { new java.lang.String[] { "en_US", "Indonesian" } }),
	isl(new java.lang.String[][] { new java.lang.String[] { "en_US", "Icelandic" } }),
	ita(new java.lang.String[][] { new java.lang.String[] { "en_US", "Italian" } }),
	ita_old(new java.lang.String[][] { new java.lang.String[] { "en_US", "Italian - Old" } }),
	jav(new java.lang.String[][] { new java.lang.String[] { "en_US", "Javanese" } }),
	jpn(new java.lang.String[][] { new java.lang.String[] { "en_US", "Japanese" } }),
	kan(new java.lang.String[][] { new java.lang.String[] { "en_US", "Kannada" } }),
	kat(new java.lang.String[][] { new java.lang.String[] { "en_US", "Georgian" } }),
	kat_old(new java.lang.String[][] { new java.lang.String[] { "en_US", "Georgian - Old" } }),
	kaz(new java.lang.String[][] { new java.lang.String[] { "en_US", "Kazakh" } }),
	khm(new java.lang.String[][] { new java.lang.String[] { "en_US", "Central Khmer" } }),
	kir(new java.lang.String[][] { new java.lang.String[] { "en_US", "Kirghiz; Kyrgyz" } }),
	kor(new java.lang.String[][] { new java.lang.String[] { "en_US", "Korean" } }),
	kur(new java.lang.String[][] { new java.lang.String[] { "en_US", "Kurdish" } }),
	lao(new java.lang.String[][] { new java.lang.String[] { "en_US", "Lao" } }),
	lat(new java.lang.String[][] { new java.lang.String[] { "en_US", "Latin" } }),
	lav(new java.lang.String[][] { new java.lang.String[] { "en_US", "Latvian" } }),
	lit(new java.lang.String[][] { new java.lang.String[] { "en_US", "Lithuanian" } }),
	mal(new java.lang.String[][] { new java.lang.String[] { "en_US", "Malayalam" } }),
	mar(new java.lang.String[][] { new java.lang.String[] { "en_US", "Marathi" } }),
	mkd(new java.lang.String[][] { new java.lang.String[] { "en_US", "Macedonian" } }),
	mlt(new java.lang.String[][] { new java.lang.String[] { "en_US", "Maltese" } }),
	msa(new java.lang.String[][] { new java.lang.String[] { "en_US", "Malay" } }),
	mya(new java.lang.String[][] { new java.lang.String[] { "en_US", "Burmese" } }),
	nep(new java.lang.String[][] { new java.lang.String[] { "en_US", "Nepali" } }),
	nld(new java.lang.String[][] { new java.lang.String[] { "en_US", "Dutch; Flemish" } }),
	nor(new java.lang.String[][] { new java.lang.String[] { "en_US", "Norwegian" } }),
	ori(new java.lang.String[][] { new java.lang.String[] { "en_US", "Oriya" } }),
	pan(new java.lang.String[][] { new java.lang.String[] { "en_US", "Panjabi; Punjabi" } }),
	pol(new java.lang.String[][] { new java.lang.String[] { "en_US", "Polish" } }),
	por(new java.lang.String[][] { new java.lang.String[] { "en_US", "Portuguese" } }),
	pus(new java.lang.String[][] { new java.lang.String[] { "en_US", "Pushto; Pashto" } }),
	ron(new java.lang.String[][] { new java.lang.String[] { "en_US", "Romanian; Moldavian; Moldovan" } }),
	rus(new java.lang.String[][] { new java.lang.String[] { "en_US", "Russian" } }),
	san(new java.lang.String[][] { new java.lang.String[] { "en_US", "Sanskrit" } }),
	sin(new java.lang.String[][] { new java.lang.String[] { "en_US", "Sinhala; Sinhalese" } }),
	slk(new java.lang.String[][] { new java.lang.String[] { "en_US", "Slovak" } }),
	slv(new java.lang.String[][] { new java.lang.String[] { "en_US", "Slovenian" } }),
	spa(new java.lang.String[][] { new java.lang.String[] { "en_US", "Spanish; Castilian" } }),
	spa_old(new java.lang.String[][] { new java.lang.String[] { "en_US", "Spanish; Castilian - Old" } }),
	sqi(new java.lang.String[][] { new java.lang.String[] { "en_US", "Albanian" } }),
	srp(new java.lang.String[][] { new java.lang.String[] { "en_US", "Serbian" } }),
	srp_latn(new java.lang.String[][] { new java.lang.String[] { "en_US", "Serbian - Latin" } }),
	swa(new java.lang.String[][] { new java.lang.String[] { "en_US", "Swahili" } }),
	swe(new java.lang.String[][] { new java.lang.String[] { "en_US", "Swedish" } }),
	syr(new java.lang.String[][] { new java.lang.String[] { "en_US", "Syriac" } }),
	tam(new java.lang.String[][] { new java.lang.String[] { "en_US", "Tamil" } }),
	tel(new java.lang.String[][] { new java.lang.String[] { "en_US", "Telugu" } }),
	tgk(new java.lang.String[][] { new java.lang.String[] { "en_US", "Tajik" } }),
	tgl(new java.lang.String[][] { new java.lang.String[] { "en_US", "Tagalog" } }),
	tha(new java.lang.String[][] { new java.lang.String[] { "en_US", "Thai" } }),
	tir(new java.lang.String[][] { new java.lang.String[] { "en_US", "Tigrinya" } }),
	tur(new java.lang.String[][] { new java.lang.String[] { "en_US", "Turkish" } }),
	uig(new java.lang.String[][] { new java.lang.String[] { "en_US", "Uighur; Uyghur" } }),
	ukr(new java.lang.String[][] { new java.lang.String[] { "en_US", "Ukrainian" } }),
	urd(new java.lang.String[][] { new java.lang.String[] { "en_US", "Urdu" } }),
	uzb(new java.lang.String[][] { new java.lang.String[] { "en_US", "Uzbek" } }),
	uzb_cyrl(new java.lang.String[][] { new java.lang.String[] { "en_US", "Uzbek - Cyrillic" } }),
	vie(new java.lang.String[][] { new java.lang.String[] { "en_US", "Vietnamese" } }),
	yid(new java.lang.String[][] { new java.lang.String[] { "en_US", "Yiddish" } });

	private java.util.Map<java.lang.String, java.lang.String> captions;

	private Enum_Languages(java.lang.String[][] captionStrings)
	{
		this.captions = new java.util.HashMap<java.lang.String, java.lang.String>();
		for (java.lang.String[] captionString : captionStrings)
			captions.put(captionString[0], captionString[1]);
	}

	public java.lang.String getCaption(java.lang.String languageCode)
	{
		if (captions.containsKey(languageCode))
			return captions.get(languageCode);
		return captions.get("en_US");
	}

	public java.lang.String getCaption()
	{
		return captions.get("en_US");
	}
}
